{"ast":null,"code":"import _slicedToArray from \"/home/codigo47/c2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codigo47/c2/src/views/Artists/ArtistList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Search from \"@material-ui/icons/Search\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Paginator from 'react-hooks-paginator';\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\nvar useStyles = makeStyles(styles);\nexport default function ArtistList() {\n  var classes = useStyles();\n  var pageLimit = 3;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentData = _useState8[0],\n      setCurrentData = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      searchText = _useState10[0],\n      setSearchText = _useState10[1];\n\n  useEffect(function () {\n    fetch(\"https://itunes.apple.com/search?country=US&media=music&entity=musicArtist&term=madonna\", {\n      method: \"GET\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (response) {\n      var artists = response.results.map(function (a) {\n        return [a.artistId, a.artistName, a.primaryGenreName];\n      });\n      setData(artists);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }, []);\n  useEffect(function () {\n    setCurrentData(data.slice(offset, offset + pageLimit));\n  }, [offset, data]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.searchWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    id: \"search\",\n    value: searchText,\n    onChange: function onChange(e) {\n      return setSearchText(e.target.value);\n    },\n    formControlProps: {\n      className: classes.margin + \" \" + classes.search\n    },\n    inputProps: {\n      placeholder: \"Search\",\n      inputProps: {\n        \"aria-label\": \"Search\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"white\",\n    \"aria-label\": \"edit\",\n    justIcon: true,\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Search, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Simple Table\"), React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Here is a subtitle for this table\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"ID\", \"Name\", \"Genre\"],\n    tableData: currentData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))))), React.createElement(Paginator, {\n    totalRecords: data.length,\n    pageLimit: pageLimit,\n    pageNeighbours: 2,\n    setOffset: setOffset,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/codigo47/c2/src/views/Artists/ArtistList.js"],"names":["React","useEffect","useState","makeStyles","GridItem","GridContainer","Table","Card","CardHeader","CardBody","Search","CustomInput","Button","Paginator","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","useStyles","ArtistList","classes","pageLimit","offset","setOffset","currentPage","setCurrentPage","data","setData","currentData","setCurrentData","searchText","setSearchText","fetch","method","then","res","json","response","artists","results","map","a","artistId","artistName","primaryGenreName","error","console","log","slice","searchWrapper","e","target","value","className","search","placeholder","inputProps","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Search from \"@material-ui/icons/Search\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport Paginator from 'react-hooks-paginator';\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function ArtistList() {\n  const classes = useStyles();\n\n  const pageLimit = 3;\n  const [offset, setOffset] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [currentData, setCurrentData] = useState([]);\n\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    fetch(\n      `https://itunes.apple.com/search?country=US&media=music&entity=musicArtist&term=madonna`,\n      {\n        method: \"GET\"\n      }\n    )\n    .then(res => res.json())\n    .then(response => {\n      const artists = response.results.map(\n        a => [a.artistId, a.artistName, a.primaryGenreName]\n      )\n      setData(artists);\n    })\n    .catch(error => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    setCurrentData(data.slice(offset, offset + pageLimit));\n  }, [offset, data]);\n\n  return (\n    <div>\n      <div className={classes.searchWrapper}>\n        <CustomInput\n          id=\"search\"\n          value={searchText}\n          onChange={e => setSearchText(e.target.value)}\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search\n          }}\n          inputProps={{\n            placeholder: \"Search\",\n            inputProps: {\n              \"aria-label\": \"Search\"\n            }\n          }}\n        />\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button>\n      </div>\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Simple Table</h4>\n              <p className={classes.cardCategoryWhite}>\n                Here is a subtitle for this table\n            </p>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"primary\"\n                tableHead={[\"ID\", \"Name\", \"Genre\"]}\n                tableData={currentData}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n\n      <Paginator\n        totalRecords={data.length}\n        pageLimit={pageLimit}\n        pageNeighbours={2}\n        setOffset={setOffset}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}